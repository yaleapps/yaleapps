/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LobbyImport } from './routes/lobby'
import { Route as LandingImport } from './routes/landing'
import { Route as IndexImport } from './routes/index'
import { Route as DemoTanstackQueryImport } from './routes/demo.tanstack-query'
import { Route as DemoStartApiRequestImport } from './routes/demo.start.api-request'

// Create/Update Routes

const LobbyRoute = LobbyImport.update({
  id: '/lobby',
  path: '/lobby',
  getParentRoute: () => rootRoute,
} as any)

const LandingRoute = LandingImport.update({
  id: '/landing',
  path: '/landing',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

const DemoStartApiRequestRoute = DemoStartApiRequestImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/landing': {
      id: '/landing'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingImport
      parentRoute: typeof rootRoute
    }
    '/lobby': {
      id: '/lobby'
      path: '/lobby'
      fullPath: '/lobby'
      preLoaderRoute: typeof LobbyImport
      parentRoute: typeof rootRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/landing': typeof LandingRoute
  '/lobby': typeof LobbyRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/landing': typeof LandingRoute
  '/lobby': typeof LobbyRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/landing': typeof LandingRoute
  '/lobby': typeof LobbyRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/landing'
    | '/lobby'
    | '/demo/tanstack-query'
    | '/demo/start/api-request'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/landing'
    | '/lobby'
    | '/demo/tanstack-query'
    | '/demo/start/api-request'
  id:
    | '__root__'
    | '/'
    | '/landing'
    | '/lobby'
    | '/demo/tanstack-query'
    | '/demo/start/api-request'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LandingRoute: typeof LandingRoute
  LobbyRoute: typeof LobbyRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LandingRoute: LandingRoute,
  LobbyRoute: LobbyRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/landing",
        "/lobby",
        "/demo/tanstack-query",
        "/demo/start/api-request"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/landing": {
      "filePath": "landing.tsx"
    },
    "/lobby": {
      "filePath": "lobby.tsx"
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    },
    "/demo/start/api-request": {
      "filePath": "demo.start.api-request.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
